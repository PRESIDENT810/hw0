#include <gtest/gtest.h>

#include "simple_ml.h"

TEST(simple_ml_TEST, matrix_indexing) {
    float X[2][4] = {{0, 1, 2, 3},
                     {4, 5, 6, 7}};
    EXPECT_EQ(X[1][3], 7);
}

TEST(simple_ml_TEST, reinterpret_casting) {
    float A1[2][4] = {{0, 1, 2, 3},
                      {4, 5, 6, 7}};
    float *A2 = reinterpret_cast<float *>(A1);
    for (int i = 0; i < 2; i++) {
        for (int j = 0; j < 4; j++) {
            EXPECT_EQ(A1[i][j], A2[i * 4 + j]);
        }
    }
}

TEST(simple_ml_TEST, matrix_mulitply) {
    constexpr int n = 5;
    constexpr int m = 2;
    constexpr int k = 3;
    float A[n*m] = {1.7640524 ,  0.4001572 ,  0.978738  ,  2.2408931 ,  1.867558,
                   -0.9772779 ,  0.95008844, -0.1513572 , -0.10321885,  0.41059852};
    float B[m*k] = {0.33333334, 0.33333334-1, 0.33333334, 0.33333334-1, 0.33333334, 0.33333334};
    float C[n*k];
    for (int k_i = 0; k_i < k; k_i++){
        for (int n_i = 0; n_i < n; n_i++){
            for (int m_i = 0; m_i < m; m_i++){
                C[n_i*k+k_i] += A[n_i*m+m_i]*B[m_i*k+k_i];
//                printf("A[%d*%d+%d]=%f, B[%d*%d+%d]=%f, C[%d*%d+%d]=%f\n",
//                       n_i, m, m_i, A[n_i*m+m_i],
//                       m_i, k, k_i, B[m_i*k+k_i],
//                       n_i, k, k_i, C[n_i*k+k_i]);
            }
        }
    }
    return;
}

TEST(simple_ml_TEST, real_testing1) {
    float X[50][5] = {{1.7640524,   0.4001572,   0.978738,    2.2408931,   1.867558},
                      {-0.9772779,  0.95008844,  -0.1513572,  -0.10321885, 0.41059852},
                      {0.14404356,  1.4542735,   0.7610377,   0.12167501,  0.44386324},
                      {0.33367434,  1.4940791,   -0.20515826, 0.3130677,   -0.85409576},
                      {-2.5529897,  0.6536186,   0.8644362,   -0.742165,   2.2697546},
                      {-1.4543657,  0.04575852,  -0.18718386, 1.5327792,   1.4693588},
                      {0.15494743,  0.37816253,  -0.88778573, -1.9807965,  -0.34791216},
                      {0.15634897,  1.2302907,   1.2023798,   -0.3873268,  -0.30230275},
                      {-1.048553,   -1.420018,   -1.7062702,  1.9507754,   -0.5096522},
                      {-0.4380743,  -1.2527953,  0.7774904,   -1.6138978,  -0.21274029},
                      {-0.89546657, 0.3869025,   -0.51080513, -1.1806322,  -0.02818223},
                      {0.42833188,  0.06651722,  0.3024719,   -0.6343221,  -0.36274117},
                      {-0.67246044, -0.35955316, -0.8131463,  -1.7262826,  0.17742614},
                      {-0.40178093, -1.6301984,  0.46278226,  -0.9072984,  0.0519454},
                      {0.7290906,   0.12898292,  1.1394007,   -1.2348258,  0.40234163},
                      {-0.6848101,  -0.87079716, -0.5788497,  -0.31155252, 0.05616534},
                      {-1.1651498,  0.9008265,   0.46566245,  -1.5362437,  1.4882522},
                      {1.8958892,   1.1787796,   -0.17992483, -1.0707526,  1.0544517},
                      {-0.40317693, 1.222445,    0.20827498,  0.97663903,  0.3563664},
                      {0.7065732,   0.01050002,  1.7858706,   0.12691209,  0.40198937},
                      {1.8831507,   -1.347759,   -1.270485,   0.9693967,   -1.1731234},
                      {1.9436212,   -0.41361898, -0.7474548,  1.922942,    1.4805148},
                      {1.867559,    0.90604466,  -0.86122566, 1.9100649,   -0.26800337},
                      {0.8024564,   0.947252,    -0.15501009, 0.61407936,  0.9222067},
                      {0.37642553,  -1.0994008,  0.2982382,   1.3263859,   -0.69456786},
                      {-0.14963454, -0.43515354, 1.8492638,   0.67229474,  0.40746182},
                      {-0.76991606, 0.5392492,   -0.6743327,  0.03183056,  -0.6358461},
                      {0.67643327,  0.57659084,  -0.20829876, 0.3960067,   -1.0930616},
                      {-1.4912575,  0.4393917,   0.1666735,   0.63503146,  2.3831449},
                      {0.94447947,  -0.91282225, 1.1170163,   -1.3159074,  -0.4615846},
                      {-0.0682416,  1.7133427,   -0.74475485, -0.82643855, -0.09845252},
                      {-0.6634783,  1.1266359,   -1.0799315,  -1.1474687,  -0.43782005},
                      {-0.49803245, 1.929532,    0.9494208,   0.08755124,  -1.2254355},
                      {0.844363,    -1.0002153,  -1.5447711,  1.1880298,   0.3169426},
                      {0.9208588,   0.31872764,  0.8568306,   -0.6510256,  -1.0342429},
                      {0.6815945,   -0.80340964, -0.6895498,  -0.4555325,  0.01747916},
                      {-0.35399392, -1.3749512,  -0.6436184,  -2.2234032,  0.62523144},
                      {-1.6020577,  -1.1043833,  0.05216508,  -0.739563,   1.5430146},
                      {-1.2928569,  0.26705086,  -0.03928282, -1.1680934,  0.5232767},
                      {-0.17154633, 0.77179056,  0.82350415,  2.163236,    1.336528},
                      {-0.36918184, -0.23937918, 1.0996596,   0.6552637,   0.64013153},
                      {-1.616956,   -0.02432613, -0.7380309,  0.2799246,   -0.09815039},
                      {0.9101789,   0.3172182,   0.78632796,  -0.4664191,  -0.94444627},
                      {-0.4100497,  -0.01702041, 0.37915173,  2.259309,    -0.04225715},
                      {-0.955945,   -0.34598178, -0.463596,   0.48148146,  -1.540797},
                      {0.06326199,  0.15650654,  0.23218104,  -0.5973161,  -0.23792173},
                      {-1.424061,   -0.49331987, -0.54286146, 0.41605005,  -1.1561824},
                      {0.7811981,   1.4944845,   -2.069985,   0.42625874,  0.676908},
                      {-0.63743705, -0.3972718,  -0.13288058, -0.29779088, -0.30901298},
                      {-1.6760038,  1.1523316,   1.0796186,   -0.81336427, -1.4664243}};
    unsigned char y[50] = {1, 0, 2, 0, 0, 1, 2, 1, 1, 1, 0, 0, 2, 0, 0, 2, 1, 2, 2, 0, 2, 2,
                   0, 2, 1, 0, 1, 2, 1, 1, 0, 1, 1, 1, 2, 0, 1, 1, 0, 1, 2, 0, 1, 2,
                   1, 2, 1, 2, 1, 2};
    float theta[5][3] = {{0., 0., 0.},
                         {0., 0., 0.},
                         {0., 0., 0.},
                         {0., 0., 0.},
                         {0., 0., 0.}};
    float *X_flatten = reinterpret_cast<float *>(X);
    float *theta_flatten = reinterpret_cast<float *>(theta);
    softmax_regression_epoch_cpp(X_flatten, y, theta_flatten, 50, 5, 3, 1.0, 50);
}

TEST(simple_ml_TEST, real_teseting2){
    float X[60] = {0.67639024, 0.95504498, 0.65896664, 0.81574962, 0.74464942,
                   0.95144714, 0.81746427, 0.9542263 , 0.68725351, 0.24779593,
                   0.43670292, 0.24771157, 0.76015   , 0.82155918, 0.64182683,
                   0.77051837, 0.60553829, 0.54634306, 0.38802986, 0.45437916,
                   0.5043798 , 0.70155784, 0.31280734, 0.2424367, 0.91243811,
                   0.60104498, 0.140782  , 0.85014885, 0.71896261, 0.22953701,
                   0.96288116, 0.18141231, 0.88118987, 0.39120453, 0.94965403,
                   0.2018164, 0.24941409, 0.68080074, 0.20248119, 0.83250551,
                   0.0012937, 0.46290127, 0.4978765 , 0.23206162, 0.78909352,
                   0.56948563, 0.72499762, 0.19430107, 0.24494133, 0.15491038,
                   0.00121577, 0.18359631, 0.45553283, 0.53300899, 0.59644796,
                   0.6720068 , 0.5986559 , 0.58709922, 0.31944037, 0.27453534};
    unsigned char y[5] = {5, 6, 5, 2, 5};
    float theta[84] = {0.90879397, 0.64529992, 0.20712377, 0.67088315, 0.40778822,
                       0.88600279, 0.75463486, 0.4585071 , 0.35392278, 0.08978472,
                       0.48848612, 0.08136054, 0.47690072, 0.88822517, 0.47472913,
                       0.9538363 , 0.08381384, 0.87352474, 0.50158449, 0.60613512,
                       0.74938273, 0.79194937, 0.09393022, 0.2232304 , 0.58884054,
                       0.48589451, 0.95877637, 0.66103567, 0.47179833, 0.61572728,
                       0.12463208, 0.30508916, 0.30798561, 0.53991089, 0.74990436,
                       0.54965189, 0.58480267, 0.49995479, 0.26033153, 0.36981643,
                       0.88586445, 0.02139898, 0.49489903, 0.24495557, 0.92228933,
                       0.29689052, 0.47640803, 0.66302456, 0.7482518 , 0.64297654,
                       0.67674214, 0.98680713, 0.83336277, 0.11823584, 0.50239976,
                       0.29628698, 0.2080314 , 0.90534914, 0.04815007, 0.55189953,
                       0.16349053, 0.81503781, 0.43419803, 0.2520861 , 0.3106908 ,
                       0.29706113, 0.99029772, 0.76115341, 0.61279581, 0.2722637 ,
                       0.21713758, 0.86017867, 0.26693002, 0.17470589, 0.75852405,
                       0.08124179, 0.41610988, 0.22980523, 0.00427967, 0.68073803,
                       0.70033476, 0.05844159, 0.7250889 , 0.11322758};
    softmax_regression_epoch_cpp(X, y, theta, 5, 12, 7, 0.1, 5);
}